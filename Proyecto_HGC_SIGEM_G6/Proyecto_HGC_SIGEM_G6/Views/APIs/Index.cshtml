@model ModelHelper.Models.APIsViewModel
<link rel="stylesheet" href="~/css/Styles/Style-Login.css" />


<h2>Panel de APIs Externas</h2>

<div class="row">
    <div class="col-md-6">
        <div class="card shadow p-3 mb-4">
            <h4>Clima en Alajuela</h4>
            @if (Model.Clima != null && Model.Clima.Main != null && Model.Clima.Weather?.Count > 0)
            {
                <ul class="list-group list-group-flush">
                    <li class="list-group-item"><strong>Temperatura:</strong> @Model.Clima.Main.Temp °C</li>
                    <li class="list-group-item"><strong>Humedad:</strong> @Model.Clima.Main.Humidity %</li>
                    <li class="list-group-item"><strong>Condición:</strong> @Model.Clima.Weather[0].Description</li>
                </ul>
            }
            else
            {
                <p class="text-danger mb-0">No se pudo cargar la información del clima.</p>
            }
        </div>
    </div>

    <div class="col-md-6">
        <div class="card shadow p-3 mb-4">
            <h4>Tipo de cambio (USD, EUR, CRC)</h4>
            @if (Model.Divisa?.Conversion_rates != null)
            {
                var divisasClave = new[] { "USD", "EUR", "CRC" };
                <ul class="list-group">
                    @foreach (var clave in divisasClave)
                    {
                        if (Model.Divisa.Conversion_rates.TryGetValue(clave, out var valor))
                        {
                            <li class="list-group-item">
                                <strong>@clave:</strong> @valor
                            </li>
                        }
                    }
                </ul>
            }
            else
            {
                <p class="text-danger mb-0">No se pudo cargar el tipo de cambio.</p>
            }
        </div>
    </div>
</div>

@if (Model.Muebles != null && Model.Muebles.Any())
{
    var first = Model.Muebles.First();

    <div class="card shadow p-3 mb-4">
        <h4>Muebles (demo sin autenticación)</h4>
        <div class="ratio ratio-4x3 mx-auto position-relative" style="max-width:520px;">
            <img id="mueble-rotatorio"
                 src="@first.ImageUrl"
                 alt="Mueble"
                 class="w-100 h-100 object-fit-contain rounded"
                 style="transition:opacity .25s ease;" />
            <div id="mueble-titulo"
                 class="position-absolute bottom-0 start-0 end-0 px-3 py-2 text-white"
                 style="background:rgba(0,0,0,.55); font-weight:600;">
                @first.Title
            </div>
        </div>
    </div>

    <script>
        (function () {
            const items = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Muebles));
            const img = document.getElementById('mueble-rotatorio');
            const title = document.getElementById('mueble-titulo');
            if (!items || items.length === 0) return;

            let i = 0, intervaloMs = 8000;
            setInterval(() => {
                i = (i + 1) % items.length;
                img.style.opacity = 0;
                setTimeout(() => {
                    img.src = items[i].ImageUrl;
                    title.textContent = items[i].Title;
                    img.onload = () => img.style.opacity = 1;
                }, 250);
            }, intervaloMs);
        })();
    </script>
}
else
{
    <div class="card shadow p-3 mb-4"><em>No hay resultados de muebles.</em></div>
}


